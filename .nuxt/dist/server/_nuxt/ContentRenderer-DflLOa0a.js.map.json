{"file":"ContentRenderer-DflLOa0a.js","mappings":"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","names":["_sfc_main","_a","_b","_c","resolveComponent","vueResolveComponent","proseComponentMap","resolveContentComponents","findMappedTag","_unref"],"sources":["../../../../node_modules/.pnpm/@nuxtjs+mdc@0.17.0_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/parser/utils/html-tags-list.js","../../../../node_modules/.pnpm/@nuxtjs+mdc@0.17.0_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/utils/index.js","../../../../node_modules/.pnpm/@nuxtjs+mdc@0.17.0_magicast@0.3.5/node_modules/@nuxtjs/mdc/dist/runtime/components/MDCRenderer.vue","../../../../virtual:nuxt:%2FUsers%2Fdevin%2Frepos%2Fprojects%2Fnuxt-astronaut-theme%2F.nuxt%2Fcontent%2Fcomponents.ts","../../../../node_modules/.pnpm/@nuxt+content@3.6.0_better-sqlite3@11.10.0_magicast@0.3.5/node_modules/@nuxt/content/dist/runtime/components/ContentRenderer.vue"],"sourcesContent":["export default [\n  \"a\",\n  \"abbr\",\n  \"address\",\n  \"area\",\n  \"article\",\n  \"aside\",\n  \"audio\",\n  \"b\",\n  \"base\",\n  \"bdi\",\n  \"bdo\",\n  \"blockquote\",\n  \"body\",\n  \"br\",\n  \"button\",\n  \"canvas\",\n  \"caption\",\n  \"cite\",\n  \"code\",\n  \"col\",\n  \"colgroup\",\n  \"data\",\n  \"datalist\",\n  \"dd\",\n  \"del\",\n  \"details\",\n  \"dfn\",\n  \"dialog\",\n  \"div\",\n  \"dl\",\n  \"dt\",\n  \"em\",\n  \"embed\",\n  \"fieldset\",\n  \"figcaption\",\n  \"figure\",\n  \"footer\",\n  \"form\",\n  \"h1\",\n  \"h2\",\n  \"h3\",\n  \"h4\",\n  \"h5\",\n  \"h6\",\n  \"head\",\n  \"header\",\n  \"hgroup\",\n  \"hr\",\n  \"html\",\n  \"i\",\n  \"iframe\",\n  \"img\",\n  \"input\",\n  \"ins\",\n  \"kbd\",\n  \"label\",\n  \"legend\",\n  \"li\",\n  \"link\",\n  \"main\",\n  \"map\",\n  \"mark\",\n  \"math\",\n  \"menu\",\n  \"menuitem\",\n  \"meta\",\n  \"meter\",\n  \"nav\",\n  \"noscript\",\n  \"object\",\n  \"ol\",\n  \"optgroup\",\n  \"option\",\n  \"output\",\n  \"p\",\n  \"param\",\n  \"picture\",\n  \"pre\",\n  \"progress\",\n  \"q\",\n  \"rb\",\n  \"rp\",\n  \"rt\",\n  \"rtc\",\n  \"ruby\",\n  \"s\",\n  \"samp\",\n  \"script\",\n  \"section\",\n  \"select\",\n  \"slot\",\n  \"small\",\n  \"source\",\n  \"span\",\n  \"strong\",\n  \"style\",\n  \"sub\",\n  \"summary\",\n  \"sup\",\n  \"svg\",\n  \"table\",\n  \"tbody\",\n  \"td\",\n  \"template\",\n  \"textarea\",\n  \"tfoot\",\n  \"th\",\n  \"thead\",\n  \"time\",\n  \"title\",\n  \"tr\",\n  \"track\",\n  \"u\",\n  \"ul\",\n  \"var\",\n  \"video\",\n  \"wbr\"\n];\n","export function pick(obj, keys) {\n  return keys.reduce((acc, key) => {\n    const value = get(obj, key);\n    if (value !== void 0) {\n      acc[key] = value;\n    }\n    return acc;\n  }, {});\n}\nfunction get(obj, key) {\n  return key.split(\".\").reduce((acc, k) => acc && acc[k], obj);\n}\n","<script>\nimport { h, resolveComponent as vueResolveComponent, reactive, watch, Text, Comment, defineAsyncComponent, defineComponent, toRaw, computed, getCurrentInstance } from \"vue\";\nimport destr from \"destr\";\nimport { kebabCase, pascalCase } from \"scule\";\nimport { find, html } from \"property-information\";\nimport htmlTags from \"../parser/utils/html-tags-list\";\nimport { flatUnwrap, nodeTextContent } from \"../utils/node\";\nimport { pick } from \"../utils\";\nconst DEFAULT_SLOT = \"default\";\nconst rxOn = /^@|^v-on:/;\nconst rxBind = /^:|^v-bind:/;\nconst rxModel = /^v-model/;\nconst nativeInputs = [\"select\", \"textarea\", \"input\"];\nconst specialParentTags = [\"math\", \"svg\"];\nconst proseComponentMap = Object.fromEntries([\"p\", \"a\", \"blockquote\", \"code\", \"pre\", \"code\", \"em\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"img\", \"ul\", \"ol\", \"li\", \"strong\", \"table\", \"thead\", \"tbody\", \"td\", \"th\", \"tr\", \"script\"].map((t) => [t, `prose-${t}`]));\nexport default defineComponent({\n  name: \"MDCRenderer\",\n  props: {\n    /**\n     * Content to render\n     */\n    body: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Document meta data\n     */\n    data: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * Class(es) to bind to the component\n     */\n    class: {\n      type: [String, Object],\n      default: void 0\n    },\n    /**\n     * Root tag to use for rendering\n     */\n    tag: {\n      type: [String, Boolean],\n      default: void 0\n    },\n    /**\n     * Whether or not to render Prose components instead of HTML tags\n     */\n    prose: {\n      type: Boolean,\n      default: void 0\n    },\n    /**\n     * The map of custom components to use for rendering.\n     */\n    components: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * Tags to unwrap separated by spaces\n     * Example: 'ul li'\n     */\n    unwrap: {\n      type: [Boolean, String],\n      default: false\n    }\n  },\n  async setup(props) {\n    const app = getCurrentInstance()?.appContext?.app;\n    const $nuxt = app?.$nuxt;\n    const route = $nuxt?.$route || $nuxt?._route;\n    const { mdc } = $nuxt?.$config?.public || {};\n    const tags = computed(() => ({\n      ...mdc?.components?.prose && props.prose !== false ? proseComponentMap : {},\n      ...mdc?.components?.map || {},\n      ...toRaw(props.data?.mdc?.components || {}),\n      ...props.components\n    }));\n    const contentKey = computed(() => {\n      const components = (props.body?.children || []).map((n) => n.tag || n.type).filter((t) => !htmlTags.includes(t));\n      return Array.from(new Set(components)).sort().join(\".\");\n    });\n    const runtimeData = reactive({\n      ...props.data\n    });\n    watch(() => props.data, (newData) => {\n      Object.assign(runtimeData, newData);\n    });\n    await resolveContentComponents(props.body, { tags: tags.value });\n    function updateRuntimeData(code, value) {\n      const lastIndex = code.split(\".\").length - 1;\n      return code.split(\".\").reduce((o, k, i) => {\n        if (i == lastIndex && o) {\n          o[k] = value;\n          return o[k];\n        }\n        return typeof o === \"object\" ? o[k] : void 0;\n      }, runtimeData);\n    }\n    return { tags, contentKey, route, runtimeData, updateRuntimeData };\n  },\n  render(ctx) {\n    const { tags, tag, body, data, contentKey, route, unwrap, runtimeData, updateRuntimeData } = ctx;\n    if (!body) {\n      return null;\n    }\n    const meta = { ...data, tags, $route: route, runtimeData, updateRuntimeData };\n    const component = tag !== false ? resolveComponentInstance(tag || meta.component?.name || meta.component || \"div\") : void 0;\n    return component ? h(component, { ...meta.component?.props, class: ctx.class, ...this.$attrs, key: contentKey }, { default: defaultSlotRenderer }) : defaultSlotRenderer?.();\n    function defaultSlotRenderer() {\n      const defaultSlot = _renderSlots(body, h, { documentMeta: meta, parentScope: meta, resolveComponent: resolveComponentInstance });\n      if (!defaultSlot?.default) {\n        return null;\n      }\n      if (unwrap) {\n        return flatUnwrap(\n          defaultSlot.default(),\n          typeof unwrap === \"string\" ? unwrap.split(\" \") : [\"*\"]\n        );\n      }\n      return defaultSlot.default();\n    }\n  }\n});\nfunction _renderNode(node, h2, options, keyInParent) {\n  const { documentMeta, parentScope, resolveComponent } = options;\n  if (node.type === \"text\") {\n    return h2(Text, node.value);\n  }\n  if (node.type === \"comment\") {\n    return h2(Comment, null, node.value);\n  }\n  const originalTag = node.tag;\n  const renderTag = findMappedTag(node, documentMeta.tags);\n  if (node.tag === \"binding\") {\n    return renderBinding(node, h2, documentMeta, parentScope);\n  }\n  const _resolveComponent = isUnresolvableTag(renderTag) ? (component2) => component2 : resolveComponent;\n  if (renderTag === \"script\") {\n    return h2(\n      \"pre\",\n      { class: \"script-to-pre\" },\n      \"<script>\\n\" + nodeTextContent(node) + \"\\n<\\/script>\"\n    );\n  }\n  const component = _resolveComponent(renderTag);\n  if (typeof component === \"object\") {\n    component.tag = originalTag;\n  }\n  const props = propsToData(node, documentMeta);\n  if (keyInParent) {\n    props.key = keyInParent;\n  }\n  return h2(\n    component,\n    props,\n    _renderSlots(\n      node,\n      h2,\n      {\n        documentMeta,\n        parentScope: { ...parentScope, ...props },\n        resolveComponent: _resolveComponent\n      }\n    )\n  );\n}\nfunction _renderSlots(node, h2, options) {\n  const { documentMeta, parentScope, resolveComponent } = options;\n  const children = node.children || [];\n  const slotNodes = children.reduce((data, node2) => {\n    if (!isTemplate(node2)) {\n      data[DEFAULT_SLOT].children.push(node2);\n      return data;\n    }\n    const slotName = getSlotName(node2);\n    data[slotName] = data[slotName] || { props: {}, children: [] };\n    if (node2.type === \"element\") {\n      data[slotName].props = node2.props;\n      data[slotName].children.push(...node2.children || []);\n    }\n    return data;\n  }, {\n    [DEFAULT_SLOT]: { props: {}, children: [] }\n  });\n  const slots = Object.entries(slotNodes).reduce((slots2, [name, { props, children: children2 }]) => {\n    if (!children2.length) {\n      return slots2;\n    }\n    slots2[name] = (data = {}) => {\n      const scopedProps = pick(data, Object.keys(props || {}));\n      let vNodes = children2.map((child, index) => {\n        return _renderNode(\n          child,\n          h2,\n          {\n            documentMeta,\n            parentScope: { ...parentScope, ...scopedProps },\n            resolveComponent\n          },\n          String(child.props?.key || index)\n        );\n      });\n      if (props?.unwrap) {\n        vNodes = flatUnwrap(vNodes, props.unwrap);\n      }\n      return mergeTextNodes(vNodes);\n    };\n    return slots2;\n  }, {});\n  return slots;\n}\nfunction renderBinding(node, h2, documentMeta, parentScope = {}) {\n  const data = {\n    ...documentMeta.runtimeData,\n    ...parentScope,\n    $document: documentMeta,\n    $doc: documentMeta\n  };\n  const splitter = /\\.|\\[(\\d+)\\]/;\n  const keys = node.props?.value.trim().split(splitter).filter(Boolean);\n  const value = keys.reduce((data2, key) => {\n    if (data2 && key in data2) {\n      if (typeof data2[key] === \"function\") {\n        return data2[key]();\n      } else {\n        return data2[key];\n      }\n    }\n    return void 0;\n  }, data);\n  const defaultValue = node.props?.defaultValue;\n  return h2(Text, value ?? defaultValue ?? \"\");\n}\nfunction propsToData(node, documentMeta) {\n  const { tag = \"\", props = {} } = node;\n  return Object.keys(props).reduce(function(data, key) {\n    if (key === \"__ignoreMap\") {\n      return data;\n    }\n    const value = props[key];\n    if (rxModel.test(key)) {\n      return propsToDataRxModel(key, value, data, documentMeta, { native: nativeInputs.includes(tag) });\n    }\n    if (key === \"v-bind\") {\n      return propsToDataVBind(key, value, data, documentMeta);\n    }\n    if (rxOn.test(key)) {\n      return propsToDataRxOn(key, value, data, documentMeta);\n    }\n    if (rxBind.test(key)) {\n      return propsToDataRxBind(key, value, data, documentMeta);\n    }\n    const { attribute } = find(html, key);\n    if (Array.isArray(value) && value.every((v) => typeof v === \"string\")) {\n      data[attribute] = value.join(\" \");\n      return data;\n    }\n    data[attribute] = value;\n    return data;\n  }, {});\n}\nfunction propsToDataRxModel(key, value, data, documentMeta, { native }) {\n  const propName = key.match(/^v-model:([^=]+)/)?.[1] || \"modelValue\";\n  const field = native ? \"value\" : propName;\n  const event = native ? \"onInput\" : `onUpdate:${propName}`;\n  data[field] = evalInContext(value, documentMeta.runtimeData);\n  data[event] = (e) => {\n    documentMeta.updateRuntimeData(value, native ? e.target?.value : e);\n  };\n  return data;\n}\nfunction propsToDataVBind(_key, value, data, documentMeta) {\n  const val = evalInContext(value, documentMeta);\n  data = Object.assign(data, val);\n  return data;\n}\nfunction propsToDataRxOn(key, value, data, documentMeta) {\n  key = key.replace(rxOn, \"\");\n  data.on = data.on || {};\n  data.on[key] = () => evalInContext(value, documentMeta);\n  return data;\n}\nfunction propsToDataRxBind(key, value, data, documentMeta) {\n  key = key.replace(rxBind, \"\");\n  data[key] = evalInContext(value, documentMeta);\n  return data;\n}\nconst resolveComponentInstance = (component) => {\n  if (typeof component === \"string\") {\n    if (htmlTags.includes(component)) {\n      return component;\n    }\n    const _component = vueResolveComponent(pascalCase(component), false);\n    if (!component || _component?.name === \"AsyncComponentWrapper\") {\n      return _component;\n    }\n    if (typeof _component === \"string\") {\n      return _component;\n    }\n    if (\"setup\" in _component) {\n      return defineAsyncComponent(() => new Promise((resolve) => resolve(_component)));\n    }\n    return _component;\n  }\n  return component;\n};\nfunction evalInContext(code, context) {\n  const result = code.split(\".\").reduce((o, k) => typeof o === \"object\" ? o[k] : void 0, context);\n  return typeof result === \"undefined\" ? destr(code) : result;\n}\nfunction getSlotName(node) {\n  let name = \"\";\n  for (const propName of Object.keys(node.props || {})) {\n    if (!propName.startsWith(\"#\") && !propName.startsWith(\"v-slot:\")) {\n      continue;\n    }\n    name = propName.split(/[:#]/, 2)[1];\n    break;\n  }\n  return name || DEFAULT_SLOT;\n}\nfunction isTemplate(node) {\n  return node.tag === \"template\";\n}\nfunction isUnresolvableTag(tag) {\n  return specialParentTags.includes(tag);\n}\nfunction mergeTextNodes(nodes) {\n  const mergedNodes = [];\n  for (const node of nodes) {\n    const previousNode = mergedNodes[mergedNodes.length - 1];\n    if (node.type === Text && previousNode?.type === Text) {\n      previousNode.children = previousNode.children + node.children;\n    } else {\n      mergedNodes.push(node);\n    }\n  }\n  return mergedNodes;\n}\nasync function resolveContentComponents(body, meta) {\n  if (!body) {\n    return;\n  }\n  const components = Array.from(new Set(loadComponents(body, meta)));\n  await Promise.all(components.map(async (c) => {\n    if (c?.render || c?.ssrRender || c?.__ssrInlineRender) {\n      return;\n    }\n    const resolvedComponent = resolveComponentInstance(c);\n    if (resolvedComponent?.__asyncLoader && !resolvedComponent.__asyncResolved) {\n      await resolvedComponent.__asyncLoader();\n    }\n  }));\n  function loadComponents(node, documentMeta) {\n    const tag = node.tag;\n    if (node.type === \"text\" || tag === \"binding\" || node.type === \"comment\") {\n      return [];\n    }\n    const renderTag = findMappedTag(node, documentMeta.tags);\n    if (isUnresolvableTag(renderTag)) {\n      return [];\n    }\n    const components2 = [];\n    if (node.type !== \"root\" && !htmlTags.includes(renderTag)) {\n      components2.push(renderTag);\n    }\n    for (const child of node.children || []) {\n      components2.push(...loadComponents(child, documentMeta));\n    }\n    return components2;\n  }\n}\nfunction findMappedTag(node, tags) {\n  const tag = node.tag;\n  if (!tag || typeof node.props?.__ignoreMap !== \"undefined\") {\n    return tag;\n  }\n  return tags[tag] || tags[pascalCase(tag)] || tags[kebabCase(node.tag)] || tag;\n}\n</script>\n","export const globalComponents: string[] = [\"ProseA\",\"ProseAccordion\",\"ProseAccordionItem\",\"ProseBadge\",\"ProseBlockquote\",\"ProseCallout\",\"ProseCard\",\"ProseCardGroup\",\"ProseCode\",\"ProseCodeCollapse\",\"ProseCodeGroup\",\"ProseCodeIcon\",\"ProseCodePreview\",\"ProseCodeTree\",\"ProseCollapsible\",\"ProseEm\",\"ProseField\",\"ProseFieldGroup\",\"ProseH1\",\"ProseH2\",\"ProseH3\",\"ProseH4\",\"ProseHr\",\"ProseIcon\",\"ProseImg\",\"ProseKbd\",\"ProseLi\",\"ProseOl\",\"ProseP\",\"ProsePre\",\"ProseScript\",\"ProseSteps\",\"ProseStrong\",\"ProseTable\",\"ProseTabs\",\"ProseTabsItem\",\"ProseTbody\",\"ProseTd\",\"ProseTh\",\"ProseThead\",\"ProseTr\",\"ProseUl\",\"ProseCaution\",\"ProseNote\",\"ProseTip\",\"ProseWarning\",\"ProseH5\",\"ProseH6\",\"Icon\"]\nexport const localComponents: string[] = []","<script setup>\nimport { kebabCase, pascalCase } from \"scule\";\nimport { resolveComponent, toRaw, defineAsyncComponent, computed } from \"vue\";\nimport htmlTags from \"@nuxtjs/mdc/runtime/parser/utils/html-tags-list\";\nimport MDCRenderer from \"@nuxtjs/mdc/runtime/components/MDCRenderer.vue\";\nimport { toHast } from \"minimark/hast\";\nimport { globalComponents, localComponents } from \"#content/components\";\nimport { useRuntimeConfig } from \"#imports\";\nconst renderFunctions = [\"render\", \"ssrRender\", \"__ssrInlineRender\"];\nconst props = defineProps({\n  /**\n   * Content to render\n   */\n  value: {\n    type: Object,\n    required: true\n  },\n  /**\n   * Render only the excerpt\n   */\n  excerpt: {\n    type: Boolean,\n    default: false\n  },\n  /**\n   * Root tag to use for rendering\n   */\n  tag: {\n    type: String,\n    default: \"div\"\n  },\n  /**\n   * The map of custom components to use for rendering.\n   */\n  components: {\n    type: Object,\n    default: () => ({})\n  },\n  data: {\n    type: Object,\n    default: () => ({})\n  },\n  /**\n   * Whether or not to render Prose components instead of HTML tags\n   */\n  prose: {\n    type: Boolean,\n    default: void 0\n  },\n  /**\n   * Root tag to use for rendering\n   */\n  class: {\n    type: [String, Object],\n    default: void 0\n  },\n  /**\n   * Tags to unwrap separated by spaces\n   * Example: 'ul li'\n   */\n  unwrap: {\n    type: [Boolean, String],\n    default: false\n  }\n});\nconst debug = import.meta.dev;\nconst body = computed(() => {\n  let body2 = props.value.body || props.value;\n  if (props.excerpt && props.value.excerpt) {\n    body2 = props.value.excerpt;\n  }\n  if (body2.type === \"minimal\" || body2.type === \"minimark\") {\n    return toHast({ type: \"minimark\", value: body2.value });\n  }\n  return body2;\n});\nconst isEmpty = computed(() => !body.value?.children?.length);\nconst data = computed(() => {\n  const { body: body2, excerpt, ...data2 } = props.value;\n  return {\n    ...data2,\n    ...props.data\n  };\n});\nconst proseComponentMap = Object.fromEntries([\"p\", \"a\", \"blockquote\", \"code\", \"pre\", \"code\", \"em\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"img\", \"ul\", \"ol\", \"li\", \"strong\", \"table\", \"thead\", \"tbody\", \"td\", \"th\", \"tr\", \"script\"].map((t) => [t, `prose-${t}`]));\nconst { mdc } = useRuntimeConfig().public || {};\nconst tags = computed(() => ({\n  ...mdc?.components?.prose && props.prose !== false ? proseComponentMap : {},\n  ...mdc?.components?.map || {},\n  ...toRaw(props.data?.mdc?.components || {}),\n  ...props.components\n}));\nconst componentsMap = computed(() => {\n  return body.value ? resolveContentComponents(body.value, { tags: tags.value }) : {};\n});\nfunction resolveVueComponent(component) {\n  let _component = component;\n  if (typeof component === \"string\") {\n    if (htmlTags.includes(component)) {\n      return component;\n    }\n    if (globalComponents.includes(pascalCase(component))) {\n      _component = resolveComponent(component, false);\n    } else if (localComponents.includes(pascalCase(component))) {\n      const loader = () => {\n        return import(\"#content/components\").then((m) => {\n          const comp = m[pascalCase(component)];\n          return comp ? comp() : void 0;\n        });\n      };\n      _component = defineAsyncComponent(loader);\n    }\n    if (typeof _component === \"string\") {\n      return _component;\n    }\n  }\n  if (!_component) {\n    return _component;\n  }\n  const componentObject = _component;\n  if (\"__asyncLoader\" in componentObject) {\n    return componentObject;\n  }\n  if (\"setup\" in componentObject) {\n    return defineAsyncComponent(() => Promise.resolve(componentObject));\n  }\n  return componentObject;\n}\nfunction resolveContentComponents(body2, meta) {\n  if (!body2) {\n    return;\n  }\n  const components = Array.from(new Set(loadComponents(body2, meta)));\n  const result = {};\n  for (const [tag, component] of components) {\n    if (result[tag]) {\n      continue;\n    }\n    if (typeof component === \"object\" && renderFunctions.some((fn) => Object.hasOwnProperty.call(component, fn))) {\n      result[tag] = component;\n      continue;\n    }\n    result[tag] = resolveVueComponent(component);\n  }\n  return result;\n}\nfunction loadComponents(node, documentMeta) {\n  const tag = node.tag;\n  if (node.type === \"text\" || tag === \"binding\" || node.type === \"comment\") {\n    return [];\n  }\n  const renderTag = findMappedTag(node, documentMeta.tags);\n  const components2 = [];\n  if (node.type !== \"root\" && !htmlTags.includes(renderTag)) {\n    components2.push([tag, renderTag]);\n  }\n  for (const child of node.children || []) {\n    components2.push(...loadComponents(child, documentMeta));\n  }\n  return components2;\n}\nfunction findMappedTag(node, tags2) {\n  const tag = node.tag;\n  if (!tag || typeof node.props?.__ignoreMap !== \"undefined\") {\n    return tag;\n  }\n  return tags2[tag] || tags2[pascalCase(tag)] || tags2[kebabCase(node.tag)] || tag;\n}\n</script>\n\n<template>\n  <MDCRenderer\n    v-if=\"!isEmpty\"\n    :body=\"body\"\n    :data=\"data\"\n    :class=\"props.class\"\n    :tag=\"props.tag\"\n    :prose=\"props.prose\"\n    :unwrap=\"props.unwrap\"\n    :components=\"componentsMap\"\n    :data-content-id=\"debug ? value.id : void 0\"\n  />\n  <slot\n    v-else\n    name=\"empty\"\n    :body=\"body\"\n    :data=\"data\"\n    :data-content-id=\"debug ? value.id : void 0\"\n  >\n    <!-- nobody -->\n  </slot>\n</template>\n"],"version":3}