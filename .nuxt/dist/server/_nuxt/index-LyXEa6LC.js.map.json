{"file":"index-LyXEa6LC.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,UAAM,EAAE,MAAM,gBAAe,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAM;AAAA,MAAa;AAAA,MAAoB,MAClE,gBAAgB,MAAM,EACnB,OAAO,CAAC,UAAU,CAAC,EACnB,IAAA;AAAA,IAAI,CACT;AAGA,UAAM,aAAa,SAAS,MAAM;;AAChC,YAAM,kCAAkB,IAAA;AAExB,uBAAW,UAAX,mBAAkB,QAAQ,CAAA,SAAQ;AAChC,YAAI,KAAK,UAAU;AACjB,gBAAM,OAAO,KAAK,SAAS,cAAc,QAAQ,QAAQ,GAAG;AAC5D,cAAI,YAAY,IAAI,KAAK,QAAQ,GAAG;AAClC,wBAAY,IAAI,KAAK,QAAQ,EAAE;AAAA,UAAA,OAC1B;AACL,wBAAY,IAAI,KAAK,UAAU;AAAA,cAC7B,MAAM,KAAK;AAAA,cACX;AAAA,cACA,OAAO;AAAA,YAAA,CACR;AAAA,UAAA;AAAA,QACH;AAAA,MACF;AAGF,aAAO,MAAM,KAAK,YAAY,OAAA,CAAQ,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,KAAK,cAAc,EAAE,IAAI,CAAC;AAAA,IAAA,CACpF;;;;;;yBApDK,CAKa,GAAAC,QAAAC,UAAA,aAAA;;;;;cAJXC,YAGM,OAAA,EAHD,OAAM,iBAAa;AAAA,gBACtBA,YAAiE,MAAA,EAA7D,OAAM,wCAAA,GAAwC,YAAU;AAAA,gBAC5DA,YAA+D,KAAA,EAA5D,OAAM,wBAAA,GAAwB,4BAA0B;AAAA,cAAA;;;;;;;AAKrD,YAAAC,mBAAA,uBAAA,EAAA,OAAM,WAAO;AAAA,yBAAzB,CAYa,GAAAH,QAAAC,UAAA,aAAA;;;AATYG,0BAAAC,MAAA,UAAA,IAAZ,aAAQ;;gBACd,KAAK,SAAS;AAAA,gBACd,IAAE,aAAe,SAAS,IAAI;AAAA,gBAC/B,OAAM;AAAA,cAAA;iCAJR,CAQQC,IAAAN,QAAAC,UAAAM,cAAA;;iFAFoCC,eAAA,SAAS,IAAI,8CAC3BA,eAAA,SAAS,KAAK;;;sBAD1CN,YAA+D,QAA3D,OAAM,6BAAA,GAA4BO,gBAAI,SAAS,IAAI,GAAA,CAAA;AAAA,sBACvDP,YAAuD,KAAA,EAApD,OAAM,gBAAA,mBAAmB,SAAS,KAAK,IAAG,UAAM,CAAA;AAAA,oBAAA;AAAA;;;;;;;;cARvDA,YAUM,OAAA,EAVD,OAAM,0DAAsD;AAAA,kCAC/DQ,YAQQC,UAAA,MAAAC,WAPaP,MAAA,UAAA,GAAU,CAAtB,aAAQ;sCADjBK,YAQQ,kBAAA;AAAA,oBANL,KAAK,SAAS;AAAA,oBACd,IAAE,aAAe,SAAS,IAAI;AAAA,oBAC/B,OAAM;AAAA,kBAAA;qCAEN,MAA+D;AAAA,sBAA/DR,YAA+D,QAA3D,OAAM,6BAAA,GAA4BO,gBAAI,SAAS,IAAI,GAAA,CAAA;AAAA,sBACvDP,YAAuD,KAAA,EAApD,OAAM,gBAAA,mBAAmB,SAAS,KAAK,IAAG,UAAM,CAAA;AAAA,oBAAA;;;;;;;;;;;;;;;;;;;;","names":["_withAsyncContext","_push","_parent","_createVNode","_ssrRenderComponent","_ssrRenderList","_unref","_","_scopeId","_ssrInterpolate","_toDisplayString","_createBlock","_Fragment","_renderList"],"sources":["../../../../pages/category/index.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"py-12 bg-gray-50\">\n      <UContainer>\n        <div class=\"text-center\">\n          <h1 class=\"text-4xl font-bold text-gray-900 mb-4\">Categories</h1>\n          <p class=\"text-xl text-gray-600\">Browse content by category</p>\n        </div>\n      </UContainer>\n    </div>\n\n    <UContainer class=\"py-12\">\n      <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <UCard \n          v-for=\"category in categories\" \n          :key=\"category.name\"\n          :to=\"`/category/${category.slug}`\"\n          class=\"hover:shadow-lg transition-shadow cursor-pointer\"\n        >\n          <h3 class=\"text-lg font-semibold mb-2\">{{ category.name }}</h3>\n          <p class=\"text-gray-600\">{{ category.count }} items</p>\n        </UCard>\n      </div>\n    </UContainer>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n// Get all shop content to extract unique categories\nconst { data: allContent } = await useAsyncData('all-shop-content', () =>\n  queryCollection('shop')\n    .select(['category'])\n    .all()\n)\n\n// Extract unique categories and count them\nconst categories = computed(() => {\n  const categoryMap = new Map()\n  \n  allContent.value?.forEach(item => {\n    if (item.category) {\n      const slug = item.category.toLowerCase().replace(/\\s+/g, '-')\n      if (categoryMap.has(item.category)) {\n        categoryMap.get(item.category).count++\n      } else {\n        categoryMap.set(item.category, {\n          name: item.category,\n          slug: slug,\n          count: 1\n        })\n      }\n    }\n  })\n  \n  return Array.from(categoryMap.values()).sort((a, b) => a.name.localeCompare(b.name))\n})\n</script>"],"version":3}