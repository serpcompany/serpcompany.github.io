{"file":"Pre-BQqg4nK9.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA,QAAe;AAAA,EACb,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,EAAA;AAAA,EAEV,YAAY;AAAA,IACV,YAAY;AAAA,MACV,QAAQ;AAAA,QACN,QAAQ;AAAA,MAAA;AAAA,IACV;AAAA,EACF;AAEJ;;;;;;;;;;;;;;;;ACLA,UAAM,QAAQ;AAYd,UAAM,EAAE,EAAC,IAAK,aAAY;AAC1B,UAAM,YAAY,aAAY;AAC9B,UAAM,YAAY,aAAY;AAC9B,UAAM,KAAK,SAAS,MAAA;;AAAM,gBAAG,EAAE,QAAQ,GAAG,KAAK,GAAG,KAAG,qBAAU,UAAV,mBAAiB,UAAjB,mBAAwB,QAAO,CAAA,EAAE,CAAE,EAAC;AAAA,KAAE;AAC3F,UAAM,SAAS,IAAI,KAAK;AACxB,aAAS,OAAO;AACd,gBAAU,KAAK,MAAM,QAAQ,EAAE;AAC/B,aAAO,QAAQ;AACf,iBAAW,MAAM;AACf,eAAO,QAAQ;AAAA,MACnB,GAAK,GAAG;AAAA,IACR;;;;;QAIQ,OAAO,GAAA,MAAG,KAAI,EAAA,OAAA,EAAW,WAAM,OAAN,mBAAU,IAAI,GAAA,UAAA,CAAA,CAAe,QAAA,SAAQ,CAAA;AAAA;AACvD,UAAA,QAAA,aAAa,QAAA,YAAU;AAAU,cAAA,eAAAA,eAAA,GAAA,MAAG,OAAM,EAAA,QAAU,WAAM,OAAN,mBAAU,OAAM,CAAA,CAAA,CAAA,IAAA;;UAClE,MAAM,QAAA;AAAA,UAAO,UAAU,QAAA;AAAA,UAAW,OAAO,SAAG,eAAc,WAAM,OAAN,mBAAU,KAAI,CAAA;AAAA;8BAErEA,eAAA,GAAA,MAAG,SAAQ,EAAA,QAAU,WAAM,OAAN,mBAAU,UAAQ,CAAA,qBAAQ,QAAA,QAAQ;;;;;QAIpE,MAAM,OAAA,QAASC,MAAA,SAAA,EAAU,GAAG,MAAM,YAAYA,MAAA,SAAA,EAAU,GAAG,MAAM;AAAA,QAClE,OAAM;AAAA,QACN,SAAQ;AAAA,QACR,MAAK;AAAA,QACJ,cAAYA,MAAA,CAAA,EAAC,gBAAA;AAAA,QACb,OAAO,SAAG,eAAc,WAAM,OAAN,mBAAU,MAAI;AAAA,QACvC,UAAS;AAAA,QACR,SAAO;AAAA;;QAGJ,OAAO,GAAA,MAAG,KAAI,EAAA,OAAA,EAAW,WAAM,OAAN,mBAAU,MAAM,MAAM,KAAK,EAAA,CAAA;AAAA,SAAcC,KAAAA,MAAM,CAAA,CAAA,GAAA;;;;;;;;;;;;","names":["_ssrRenderClass","_unref","$attrs"],"sources":["../../../../virtual:nuxt:%2FUsers%2Fdevin%2Frepos%2Fprojects%2Fnuxt-astronaut-theme%2F.nuxt%2Fui-pro%2Fprose%2Fpre.ts","../../../../node_modules/.pnpm/@nuxt+ui-pro@3.1.3_@babel+parser@7.27.5_db0@0.3.2_better-sqlite3@11.10.0__embla-carousel@8.6._we2jzkgj7we47m7vntg4hk6x7a/node_modules/@nuxt/ui-pro/dist/runtime/components/prose/Pre.vue"],"sourcesContent":["export default {\n  \"slots\": {\n    \"root\": \"relative my-5 group\",\n    \"header\": \"flex items-center gap-1.5 border border-muted bg-default border-b-0 relative rounded-t-md px-4 py-3\",\n    \"filename\": \"text-default text-sm/6\",\n    \"icon\": \"size-4 shrink-0\",\n    \"copy\": \"absolute top-[11px] right-[11px] lg:opacity-0 lg:group-hover:opacity-100 transition\",\n    \"base\": \"group font-mono text-sm/6 border border-muted bg-muted rounded-md px-4 py-3 whitespace-pre-wrap break-words overflow-x-auto focus:outline-none\"\n  },\n  \"variants\": {\n    \"filename\": {\n      \"true\": {\n        \"root\": \"[&>pre]:rounded-t-none [&>pre]:my-0 my-5\"\n      }\n    }\n  }\n}","<script>\nimport theme from \"#build/ui-pro/prose/pre\";\n</script>\n\n<script setup>\nimport { ref, computed } from \"vue\";\nimport { useClipboard } from \"@vueuse/core\";\nimport { useAppConfig } from \"#imports\";\nimport { useLocalePro } from \"../../composables/useLocalePro\";\nimport CodeIcon from \"./CodeIcon.vue\";\nimport { tv } from \"../../utils/tv\";\nconst props = defineProps({\n  icon: { type: String, required: false },\n  code: { type: String, required: false },\n  language: { type: String, required: false },\n  filename: { type: String, required: false },\n  highlights: { type: Array, required: false },\n  hideHeader: { type: Boolean, required: false },\n  meta: { type: String, required: false },\n  class: { type: null, required: false },\n  ui: { type: null, required: false }\n});\ndefineSlots();\nconst { t } = useLocalePro();\nconst clipboard = useClipboard();\nconst appConfig = useAppConfig();\nconst ui = computed(() => tv({ extend: tv(theme), ...appConfig.uiPro?.prose?.pre || {} })());\nconst copied = ref(false);\nfunction copy() {\n  clipboard.copy(props.code || \"\");\n  copied.value = true;\n  setTimeout(() => {\n    copied.value = false;\n  }, 2e3);\n}\n</script>\n\n<template>\n  <div :class=\"ui.root({ class: [props.ui?.root], filename: !!filename })\">\n    <div v-if=\"filename && !hideHeader\" :class=\"ui.header({ class: props.ui?.header })\">\n      <CodeIcon :icon=\"icon\" :filename=\"filename\" :class=\"ui.icon({ class: props.ui?.icon })\" />\n\n      <span :class=\"ui.filename({ class: props.ui?.filename })\">{{ filename }}</span>\n    </div>\n\n    <UButton\n      :icon=\"copied ? appConfig.ui.icons.copyCheck : appConfig.ui.icons.copy\"\n      color=\"neutral\"\n      variant=\"outline\"\n      size=\"sm\"\n      :aria-label=\"t('prose.pre.copy')\"\n      :class=\"ui.copy({ class: props.ui?.copy })\"\n      tabindex=\"-1\"\n      @click=\"copy\"\n    />\n\n    <pre :class=\"ui.base({ class: [props.ui?.base, props.class] })\" v-bind=\"$attrs\"><slot /></pre>\n  </div>\n</template>\n\n<style>\n.shiki span.line{display:block}.shiki span.line.highlight{margin:0 -16px;padding:0 16px;@apply bg-(--ui-bg-accented)/50}\n</style>\n"],"version":3}